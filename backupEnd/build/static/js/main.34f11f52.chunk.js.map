{"version":3,"sources":["components/Header.js","pages/LandingPage.js","pages/SQL.js","components/SubmitButton.js","components/userSpace.js","components/InputField.js","components/login.components.js","components/signup.components.js","App.js","serviceWorker.js","index.js"],"names":["Header","Fragment","Navbar","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Form","inline","FormControl","type","placeholder","Button","React","Component","LandingPage","style","minHeight","window","innerHeight","height","SQL","SubmitButton","disabled","this","props","onClick","extendObservable","loading","isLoggedIn","username","InputField","value","onChange","e","target","Login","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","userSpace","resetForm","alert","msg","console","log","setInputValue","doLogin","text","SignUp","App","document","title","doLogout","exact","path","component","observer","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.34f11f52.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nclass Header extends React.Component {\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"/\">SS-KAKS</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                        {/* <Nav.Link href=\"#home\">Home</Nav.Link> */}\r\n                        <Nav.Link href=\"/sql\">SQL Injection</Nav.Link>\r\n                        <Nav.Link href=\"#link\">IDOR/URL</Nav.Link>\r\n                        <Nav.Link href=\"#link\">CSRF</Nav.Link>\r\n                        <Nav.Link href=\"#link\">XSS</Nav.Link>\r\n                       \r\n\r\n                        {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">SQL Injection</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">IDOR/URL</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">CSRF</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">XSS</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                        </NavDropdown> */}\r\n                        </Nav>\r\n                       \r\n                        <Form inline>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                        <Button variant=\"outline-success\">Search</Button>\r\n                        </Form>\r\n                        <Nav>\r\n                        <Nav.Link href=\"login\">Log-In</Nav.Link>\r\n                        <Nav.Link href=\"signup\">Sign-Up</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                    </Navbar>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n \r\n\r\n\r\nexport default Header","import React from 'react';\r\n\r\nimport Header from '../components/Header';\r\n\r\n\r\nclass LandingPage extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment style={{minHeight: window.innerHeight - 120}}>\r\n\r\n                <Header/>\r\n                <div style={{height: 200}}/>\r\n\r\n                <p>yo yo yo </p>\r\n                \r\n                {/* <Home/>\r\n                <div style={{height: 250}}/>\r\n                <Media/>    \r\n                <div style={{height: 250}}/>\r\n                <Testimonials/>\r\n                <div style={{height: 250}}/>\r\n                <ContactUs/>\r\n                <div style={{height: 175}}/>\r\n                <Footer/> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default LandingPage;","import React from 'react';\r\n\r\nimport Header from '../components/Header';\r\n\r\n\r\nclass SQL extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment style={{minHeight: window.innerHeight - 120}}>\r\n\r\n                <Header/>\r\n                <div style={{height: 200}}\r\n                   \r\n                />\r\n\r\n                    <p>yo yo ya </p>\r\n                \r\n                {/* <Home/>\r\n                <div style={{height: 250}}/>\r\n                <Media/>    \r\n                <div style={{height: 250}}/>\r\n                <Testimonials/>\r\n                <div style={{height: 250}}/>\r\n                <ContactUs/>\r\n                <div style={{height: 175}}/>\r\n                <Footer/> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default SQL;","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"submitButton\">\r\n                <button\r\n                    className='btn'\r\n                    disabled={this.props.disabled}\r\n                    onClick={() => this.props.onClick()}\r\n                >\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\nexport default SubmitButton;","import {extendObservable} from 'mobx';\r\n\r\nclass userSpace{\r\n    constructor(){\r\n\r\n        extendObservable(this,{\r\nloading:true,\r\nisLoggedIn:false,\r\nusername: ''\r\n        })\r\n    }\r\n}\r\nexport default new userSpace();","import React from 'react';\r\n\r\nclass InputField extends React.Component{\r\nrender(){\r\n    return (\r\n        <div className = \"inputField\">\r\n            <input className = 'input'\r\n            type ={this.props.type}\r\n            placeholder = {this.props.placeholder}\r\n            value = {this.props.value}\r\n            onChange = {(e)=> this.props.onChange(e.target.value)}\r\n            />\r\n\r\n\r\n            </div>\r\n\r\n\r\n    );\r\n}\r\n}\r\nexport default InputField;","import React, { Component } from \"react\";\r\nimport Header from './Header';\r\nimport userSpace from \"./userSpace\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport InputField from './InputField';\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { username: '', password: '', buttonDisabled: false }\r\n\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 12) {\r\n            return;\r\n        }\r\n        this.setState({ [property]: val })\r\n    }\r\n    resetForm() {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n    async doLogin() {\r\n        if (!this.state.username) {\r\n            return;\r\n        }\r\n        if (!this.state.password) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n            let res = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                userSpace.isLoggedIn = true;\r\n                userSpace.username = result.username;\r\n            }\r\n            else if (result && result.success == false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment style={{ minHeight: window.innerHeight - 120 }}>\r\n                <Header />\r\n\r\n                <div className=\"loginForm\">\r\n\r\n                    <h3>Sign In</h3>\r\n\r\n\r\n                    <InputField type='text'\r\n                        placeholder='Username'\r\n                        value={this.state.username ? this.state.username : ''}\r\n                        onChange={(val) => this.setInputValue('username', val)}\r\n\r\n                    />\r\n                    <InputField \r\n                    type='text'\r\n                        placeholder='Password'\r\n                        value={this.state.password ? this.state.password : ''}\r\n                        onChange={(val) => this.setInputValue('password', val)}\r\n\r\n                    /> \r\n         <button type=\"submit\" className='submitButton'\r\n           disabled={this.props.disabled}\r\n          disabled={this.state.buttonDisabled}\r\n          onClick={() => this.props.onClick()}\r\n          onClick={() => this.doLogin()}>Sign Up</button>\r\n  {this.props.text}\r\n                   \r\n                    <SubmitButton\r\n                        text='Login'\r\n                        disabled={this.state.buttonDisabled}\r\n                        onClick={() => this.doLogin()}\r\n                    />\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Header from './Header';\r\n\r\nexport default class SignUp extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment style={{minHeight: window.innerHeight - 120}}> \r\n            <Header/>\r\n            <form>\r\n                <h3>Sign Up</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>First name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"First name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Last name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                <p className=\"forgot-password text-right\">\r\n                    Already registered <a href=\"/login\">sign in?</a>\r\n                </p>\r\n            </form>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport LandingPage from './pages/LandingPage';\r\nimport SQL from './pages/SQL';\r\nimport SubmitButton from './components/SubmitButton';\r\nimport userSpace from \"./components/userSpace\";\r\nimport {observer} from 'mobx-react';\r\nimport Login from \"./components/login.components\";\r\nimport SignUp from \"./components/signup.components\";\r\nimport { Form, Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n\r\n  async componentDidMount() {\r\n    try {\r\n\r\n      let res = await fetch('/isLoggedIn', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-type': 'application/json'\r\n        }\r\n      });\r\n\r\n\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        userSpace.loading = false;\r\n        userSpace.isLoggedIn = true;\r\n        userSpace.username = result.username;\r\n      } else {\r\n        userSpace.loading = false;\r\n        userSpace.isLoggedIn = false;\r\n      }\r\n\r\n    } catch (e) {\r\n      userSpace.loading = false;\r\n      userSpace.isLoggedIn = false;\r\n    }\r\n  }\r\n  async doLogout() {\r\n    try {\r\n\r\n      let res = await fetch('/logout', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-type': 'application/json'\r\n        }\r\n      });\r\n\r\n\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n\r\n        userSpace.isLoggedIn = false;\r\n        userSpace.username = '';\r\n      }\r\n\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    document.title = 'SS-KAKS'\r\n  }\r\n\r\n  render() {\r\n    if (userSpace.isLoggedIn) {\r\n      return (\r\n        <div className=\"app\">\r\n          <div className='container'>\r\n            Welcome {userSpace.username}\r\n          <SubmitButton  text = {'Log out'}\r\n          disabled= {false}\r\n          onClick={() => this.doLogout()}\r\n          />\r\n \r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n      );\r\n\r\n    }\r\n    return (\r\n\r\n      <Router>\r\n\r\n        <Switch>\r\n          <Route exact path='/' component={LandingPage} />\r\n          <Route exact path='/login' component={Login} />\r\n          <Route exact path='/sql' component={SQL} />\r\n          <Route exact path='/signup' component={SignUp} />\r\n\r\n\r\n          {/* <Route exact path='/IDOR_URL' component={Admin} />\r\n            <Route exact path='/admin/shop' component={ShopAdmin} />\r\n            <Route exact path='/admin/testimonials' component={TestimonialsAdmin} />\r\n            <Route component={NotFound} /> */}\r\n\r\n        </Switch>\r\n      </Router>\r\n\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n//import \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}