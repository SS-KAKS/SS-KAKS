{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","components/Header.js","pages/LandingPage.js","components/table.component.js","components/search.component.js","pages/SQL.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","components/Profile.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","Header","onLogoutClick","e","preventDefault","props","event","this","history","push","user","auth","className","to","href","onClick","logOut","bind","undefined","name","Fragment","Navbar","bg","expand","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","style","color","width","borderRadius","letterSpacing","marginTop","React","Component","connect","state","withRouter","LandingPage","minHeight","window","innerHeight","height","Music","require","music","track","artist","price","stock","Table","onChangeSearch","onSubmit","search","get","then","response","setState","data","catch","error","console","log","i","target","value","location","map","currentT","key","onChange","marginLeft","list","Songs","Search","match","params","SQL","exact","path","component","isEmpty","initialState","isAuthenticated","loading","combineReducers","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Profile","first_name","last_name","email","usertoken","jwt_decode","Register","newUser","password","password2","registerUser","nextProps","noValidate","display","htmlFor","fontWeight","textAlign","placeholder","classnames","invalid","userData","post","res","err","Login","loginUser","emailnotfound","passwordincorrect","required","setItem","rest","render","Dashboard","split","jwtToken","currentTime","Date","now","exp","App","document","title","observer","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc591eae.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React from 'react';\r\nimport { logoutUser } from  \"../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport { Link, withRouter } from 'react-router-dom'\r\n \r\nclass Header extends React.Component {\r\n  \r\n    updateState(event){\r\n\r\n    }\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n      };\r\n    logOut(e) {\r\n        e.preventDefault()\r\n        localStorage.removeItem('usertoken')\r\n        this.props.history.push(`/`)\r\n      }\r\n      \r\n   \r\n\r\n    render() {  \r\n        const myColor = { color: 'white' };\r\n         const { user } = this.props.auth;\r\n        const userLink = (\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/profile\" className=\"nav-link\">\r\n                  User\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"\" onClick={this.logOut.bind(this)} className=\"nav-link\">\r\n                  Logout\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          )\r\n     \r\n        if(user.name === undefined ){\r\n           \r\n            return (\r\n                <React.Fragment>\r\n                    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n                        <Navbar.Brand href=\"/\">SS-KAKS</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                        \r\n    \r\n                            {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#action/3.1\">SQL Injection</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.2\">IDOR/URL</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.3\">CSRF</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.3\">XSS</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                            </NavDropdown> */}\r\n                            </Nav>\r\n                           \r\n                            {/* <Form inline>\r\n                            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                            <Button variant=\"outline-success\">Search</Button>\r\n                            </Form> */}\r\n                            <nav>\r\n                             <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/login\" className=\"nav-link\">\r\n                Login\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          </nav>\r\n          <nav>\r\n                             <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/register\" className=\"nav-link\">\r\n                Signup\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          </nav>\r\n                \r\n                        \r\n                        </Navbar.Collapse>\r\n                        </Navbar>\r\n    \r\n                </React.Fragment>\r\n            )\r\n\r\n\r\n        }else{\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"/\">SS-KAKS</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                        {/* <Nav.Link href=\"#home\">Home</Nav.Link> */}\r\n                        <Nav.Link href=\"sql\">SQL Injection</Nav.Link>\r\n                        <Nav.Link href=\"#link\">IDOR/URL</Nav.Link>\r\n                        <Nav.Link href=\"#link\">CSRF</Nav.Link>\r\n                        <Nav.Link href=\"#link\">XSS</Nav.Link>\r\n                       \r\n\r\n                        {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">SQL Injection</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">IDOR/URL</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">CSRF</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">XSS</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                        </NavDropdown> */}\r\n                        </Nav>\r\n                       \r\n                        {/* <Form inline>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                        <Button variant=\"outline-success\">Search</Button>\r\n                        </Form> */}\r\n                     \r\n                       <h2 style={ myColor }>  {user.name} ,   </h2>\r\n             <button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\",\r\n                color: 'white'\r\n              } }\r\n              onClick={this.onLogoutClick}\r\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n            >\r\n              Logout\r\n            </button>\r\n                    </Navbar.Collapse>\r\n                    </Navbar>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    }\r\n}\r\n \r\n \r\n  const mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    name: state.name\r\n  }\r\n  );\r\n  export default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n  )(withRouter(Header));\r\n\r\n//export default  withRouter(Header)","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from '../components/Header';\r\n\r\n\r\nclass LandingPage extends React.Component {\r\n\r\n\r\n    render() {\r\n      const { user } = this.props.auth;\r\n      if(user.name===undefined){\r\n        return (\r\n            <React.Fragment style={{minHeight: window.innerHeight - 120}}>\r\n\r\n                <Header/>\r\n                <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 center-align\">\r\n            <br></br>\r\n            <br></br>\r\n            <h4>\r\n              You must login to access site! \r\n            </h4>\r\n            <br></br>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Already have an account? <Link to=\"/login\">Log in</Link>\r\n              </p>\r\n              <br></br>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </p>\r\n            \r\n            <br />\r\n         \r\n      \r\n          </div>\r\n        </div>\r\n      </div>>\r\n                \r\n\r\n            </React.Fragment>\r\n        )\r\n      }else{\r\n        return (\r\n          <React.Fragment style={{minHeight: window.innerHeight - 120}}>\r\n\r\n              <Header/>\r\n              <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 center-align\">\r\n          <br></br>\r\n          <br></br>\r\n          <h4>\r\n            Welcome to the home page  {user.name}, feel free to look around and try to exploit this page.\r\n          </h4>\r\n          <br></br>\r\n          <br />\r\n       \r\n    \r\n        </div>\r\n      </div>\r\n    </div>>\r\n              \r\n\r\n          </React.Fragment>\r\n      )\r\n      }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  name: state.name\r\n}\r\n);\r\nexport default connect(\r\n  mapStateToProps\r\n)(LandingPage);\r\n  \r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nvar ip = require(\"ip\");\r\nconst Music = props => (\r\n  <tr>\r\n    <td>{props.music.id}</td>\r\n    <td>{props.music.track}</td>\r\n    <td>{props.music.artist}</td>\r\n    <td>{props.music.price}</td>\r\n    <td>{props.music.stock}</td>\r\n  </tr>\r\n)\r\n\r\n\r\n\r\nexport default class Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //this.searching = this.searching.bind(this);\r\n    this.onChangeSearch = this.onChangeSearch.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {music: [], search: ''};\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/tables/get')\r\n      .then(response => {\r\n        this.setState({music: response.data})\r\n        //console.log(this.state.music)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n    }\r\n  onChangeSearch(i) {\r\n    this.setState({\r\n      search: i.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(i) {\r\n    i.preventDefault();\r\n    if (this.state.search === \"\") {\r\n      window.location = '/sql';\r\n    }\r\n    else {\r\n      window.location = '/sql/' + this.state.search;\r\n    }\r\n  }\r\n\r\nlist() {\r\n  return this.state.music.map(currentT => {\r\n    return <Music music={currentT} key={currentT.id}/>;\r\n  })\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div>\r\n      <h1>Music Store</h1>\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className=\"form-group\">\r\n          <h4>Search track</h4>\r\n          <input type=\"text\"\r\n            value={this.state.search}\r\n            onChange={this.onChangeSearch}\r\n            />\r\n            \r\n            <input type=\"submit\" value=\"Search\" className=\"btn btn-primary\" style={{marginLeft: \"10px\"}} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          \r\n        </div>\r\n      </form>\r\n      <table className=\"table\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Track</th>\r\n            <th>Artist</th>\r\n            <th>Price</th>\r\n            <th>In Stock</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.list()}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n}\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\nvar ip = require(\"ip\");\r\nconst Songs = props => (\r\n  <tr>\r\n    <td>{props.music.id}</td>\r\n    <td>{props.music.track}</td>\r\n    <td>{props.music.artist}</td>\r\n    <td>{props.music.price}</td>\r\n    <td>{props.music.stock}</td>\r\n  </tr>\r\n)\r\n\r\n\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeSearch = this.onChangeSearch.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {music: [], search: ''};\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/tables/get/' + this.props.match.params.search)\r\n      .then(response => {\r\n        this.setState({music: response.data})\r\n        console.log(this.state.music)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n    }\r\n  onChangeSearch(i) {\r\n    this.setState({\r\n      search: i.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(i) {\r\n    i.preventDefault();\r\n\r\n    if (this.state.search === \"\") {\r\n      window.location = './';\r\n    }\r\n    else {\r\n      window.location = './' + this.state.search;\r\n    }\r\n  }\r\n\r\nlist() {\r\n  return this.state.music.map(currentT => {\r\n    return <Songs music={currentT} key={currentT.id}/>;\r\n  })\r\n}\r\n\r\nrender() {\r\n  return (\r\n    \r\n    <div>\r\n      <Header />\r\n      <h1>Music Store</h1>\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className=\"form-group\">\r\n          <h4>Search track</h4>\r\n          <input type=\"text\"\r\n            value={this.state.search}\r\n            onChange={this.onChangeSearch}\r\n            />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" value=\"Search\" className=\"btn btn-primary\" />\r\n        </div>\r\n      </form>\r\n      <table className=\"table\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Track</th>\r\n            <th>Artist</th>\r\n            <th>Price</th>\r\n            <th>In Stock</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.list()}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from '../components/Header';\r\nimport Table from '../components/table.component';\r\nimport Search from '../components/search.component';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass SQL extends React.Component {\r\n\r\n\r\n    render() {\r\n      const { user } = this.props.auth;\r\n      if(user.name===undefined){\r\n        return (\r\n          <React.Fragment style={{minHeight: window.innerHeight - 120}}>\r\n\r\n              <Header/>\r\n              <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 center-align\">\r\n          <br></br>\r\n          <br></br>\r\n          <h4>\r\n            You must login to access site! \r\n          </h4>\r\n          <br></br>\r\n            <p className=\"grey-text text-darken-1\">\r\n              Already have an account? <Link to=\"/login\">Log in</Link>\r\n            </p>\r\n            <br></br>\r\n            <p className=\"grey-text text-darken-1\">\r\n              Don't have an account? <Link to=\"/register\">Register</Link>\r\n            </p>\r\n          \r\n          <br />\r\n       \r\n    \r\n        </div>\r\n      </div>\r\n    </div>>\r\n              \r\n\r\n          </React.Fragment>\r\n      )\r\n\r\n\r\n      }else{\r\n        return (\r\n          <Router>\r\n              <div className=\"Sql\">\r\n                <Header />\r\n                <Route exact path=\"\" component={Table} />\r\n                <Route exact path=\"/sql/:search\" component={Search} />\r\n              </div>\r\n          </Router>\r\n        )\r\n      }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  name: state.name\r\n}\r\n);\r\nexport default connect(\r\n  mapStateToProps\r\n)(SQL);\r\n \r\n\r\n\r\n","  \r\nimport { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\r\n      compose\r\n  )\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      first_name: '',\r\n      last_name: '',\r\n      email: '',\r\n      errors: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.usertoken\r\n    try{\r\n      const decoded = jwt_decode(token)\r\n    }catch(error){\r\n      console.log('invalid token format', error);\r\n      return true;\r\n    }\r\n    const decoded = jwt_decode(token)\r\n    this.setState({\r\n      first_name: decoded.first_name,\r\n      last_name: decoded.last_name,\r\n      email: decoded.email\r\n    })\r\n \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"jumbotron mt-5\">\r\n          <div className=\"col-sm-8 mx-auto\">\r\n            <h1 className=\"text-center\">PROFILE</h1>\r\n          </div>\r\n          <table className=\"table col-md-6 mx-auto\">\r\n            <tbody>\r\n              <tr>\r\n                <td>Fist Name</td>\r\n                <td>{this.state.first_name}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Last Name</td>\r\n                <td>{this.state.last_name}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Email</td>\r\n                <td>{this.state.email}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default   Profile","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport Header from '../Header';\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = e => {\r\n    e.preventDefault();\r\nconst newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\nthis.props.registerUser(newUser, this.props.history); \r\n  };\r\nrender() {\r\n    const { errors } = this.state;\r\nreturn (\r\n  <React.Fragment style={{minHeight: window.innerHeight - 120}}>\r\n\r\n  <Header/>\r\n\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 mt-5 mx-auto\">\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                  <h1 className=\"h3 mb-3 font-weight-normal\">Register</h1>\r\n                  <br></br>\r\n                  <div className=\"form-group\">\r\n\r\n                    <div style={{display:\"flex\"}}>\r\n                      <label htmlFor=\"email\" style={{width:\"50%\"}}>Name:</label>\r\n                      <span style={{color: \"red\", width: \"50%\", fontWeight: \"bold\", textAlign: \"right\"}}>\r\n                        {errors.name}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.name}\r\n                      error={errors.name}\r\n                      id=\"name\"\r\n                      type=\"text\"\r\n                      placeholder = \"Name\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.name\r\n                      })}\r\n                    />\r\n\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <div style={{display:\"flex\"}}>\r\n                      <label htmlFor=\"email\" style={{width:\"50%\"}}>Email Address:</label>\r\n                      <span style={{color: \"red\", width: \"50%\", fontWeight: \"bold\", textAlign: \"right\"}}>\r\n                        {errors.email}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.email}\r\n                      error={errors.email}\r\n                      id=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"Email Address\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.email\r\n                      })}\r\n                    />\r\n\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <div style={{display:\"flex\"}}>\r\n                      <label htmlFor=\"email\" style={{width:\"25%\"}}>Password:</label>\r\n                      <span style={{color: \"red\", width: \"75%\", fontWeight: \"bold\", textAlign: \"right\"}}>\r\n                        {errors.password}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.password}\r\n                      error={errors.password}\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      placeholder = \"Password\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.password\r\n                      })}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n\r\n                    <div style={{display:\"flex\"}}>\r\n                      <label htmlFor=\"email\" style={{width:\"50%\"}}>Confirm Password:</label>\r\n                      <span style={{color: \"red\", width: \"50%\", fontWeight: \"bold\", textAlign: \"right\"}}>\r\n                        {errors.password2}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.password2}\r\n                      error={errors.password2}\r\n                      id=\"password2\"\r\n                      type=\"password\"\r\n                      placeholder=\"Confirm Password\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.password2\r\n                      })}\r\n                    />\r\n                  </div>\r\n                  <br></br>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-lg btn-primary btn-block\"\r\n                  >\r\n                    Register\r\n                  </button>\r\n                </form>\r\n                <br></br>\r\n                <p className=\"grey-text text-darken-1\">\r\n                Already have an account? <Link to=\"/login\">Log in</Link>\r\n              </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport Header from '../Header';\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/\");\r\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n    }\r\nif (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = e => {\r\n    e.preventDefault();\r\nconst userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\nthis.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\nrender() {\r\n    const { errors } = this.state;\r\nreturn (\r\n    <React.Fragment style={{minHeight: window.innerHeight - 120}}>\r\n    <Header/>\r\n              \r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mt-5 mx-auto\">\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <h1 className=\"h3 mb-3 font-weight-normal\">Login</h1>\r\n              <br></br>\r\n              <div className=\"form-group\">\r\n\r\n                <div style={{display:\"flex\"}}>\r\n                  <label htmlFor=\"email\" style={{width:\"50%\"}}>Email Address:</label>\r\n                  <span style={{color: \"red\", width: \"50%\", fontWeight: \"bold\", textAlign: \"right\"}}>\r\n                    {errors.email}\r\n                    {errors.emailnotfound}\r\n                  </span>\r\n                </div>\r\n                \r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email Address\"\r\n                  className={classnames(\"form-control\", {\r\n                    invalid: errors.email || errors.emailnotfound\r\n                  })}\r\n                />\r\n\r\n              </div>\r\n              <div className=\"form-group\">\r\n              <div style={{display:\"flex\"}}>\r\n                  <label htmlFor=\"email\" style={{width:\"50%\"}}>Password:</label>\r\n                  <span style={{color: \"red\", width: \"50%\", fontWeight: \"bold\", textAlign: \"right\"}}>\r\n                    {errors.password}\r\n                    {errors.passwordincorrect}\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  placeholder = \"Password\"\r\n                  required\r\n                  className={classnames(\"form-control\", {\r\n                    invalid: errors.password || errors.passwordincorrect\r\n                  })}\r\n                />\r\n              </div>\r\n              <br></br>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-block\">\r\n              Login\r\n              </button>\r\n            </form>\r\n            <br></br>\r\n            <p className=\"grey-text text-darken-1\">\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport Header from \"../Header\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from  \"../../actions/authActions\";\r\n \r\nclass Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n \r\n\r\nrender() {\r\n    const { user } = this.props.auth;\r\n    \r\nreturn (\r\n  <React.Fragment style={{minHeight: window.innerHeight - 120}}>\r\n  \r\n    <Header name = {user.name.split(\" \")[0]}  />\r\n              \r\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 center-align\">\r\n            <h4>\r\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\r\n              <p className=\"flow-text grey-text text-darken-1\">\r\n                Please look around, and try different attacks, Mr/Mrs/Ms { user.name.split(\" \")[0] }.\r\n                 \r\n              \r\n            \r\n              </p>\r\n            </h4>\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n  \r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Dashboard);","import React from 'react';\r\nimport LandingPage from './pages/LandingPage';\r\nimport SQL from './pages/SQL';\r\nimport { observer } from 'mobx-react';\r\nimport { Provider } from \"react-redux\";\r\nimport Search from \"./components/search.component\"\r\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport store from \"./store\";\r\nimport Profile from './components/Profile'\r\nimport Register from \"./components/auth/Register\";\r\nimport Login from \"./components/auth/Login\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\n\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\nclass App extends React.Component {\r\n  componentWillMount(){\r\n    document.title = 'SS-KAKS'\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n\r\n          <Switch>\r\n            <Route exact path='/' component={LandingPage} />\r\n      \r\n            <Route exact path='/sql' component={SQL} />\r\n            <Route exact path='/sql/:search' component={Search}/>\r\n            <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/profile\" component={Profile} />\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n\r\n            {/* <Route exact path='/IDOR_URL' component={Admin} />\r\n            <Route exact path='/admin/shop' component={ShopAdmin} />\r\n            <Route exact path='/admin/testimonials' component={TestimonialsAdmin} />\r\n            <Route component={NotFound} /> */}\r\n\r\n          </Switch>\r\n        </Router>\r\n\r\n        </Provider>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n//import \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}